<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='ComparingCovid-19inDifferentCountries' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-size' value='2' />
      <format attr='line-pattern-only' value='solid' />
    </style-rule>
    <style-rule element='tooltip'>
      <format attr='font-family' value='Sitka' />
    </style-rule>
    <style-rule element='all'>
      <format attr='color' value='#1b1b1b' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
        <calculation class='tableau' formula='&quot;US&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas, The&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Cabo Verde&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Channel Islands&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Congo (Brazzaville)&quot;' />
          <member value='&quot;Congo (Kinshasa)&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cruise Ship&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;East Timor&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia, The&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao SAR&quot;' />
          <member value='&quot;Macau&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Ireland&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Others&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Republic of Ireland&quot;' />
          <member value='&quot;Republic of Korea&quot;' />
          <member value='&quot;Republic of Moldova&quot;' />
          <member value='&quot;Republic of the Congo&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Russian Federation&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Barthelemy&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Martin&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Martin&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taipei and environs&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;US&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vatican City&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
        <calculation class='tableau' formula='&quot;Italy&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas, The&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Cabo Verde&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Channel Islands&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Congo (Brazzaville)&quot;' />
          <member value='&quot;Congo (Kinshasa)&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cruise Ship&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;East Timor&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia, The&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao SAR&quot;' />
          <member value='&quot;Macau&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Ireland&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Others&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Republic of Ireland&quot;' />
          <member value='&quot;Republic of Korea&quot;' />
          <member value='&quot;Republic of Moldova&quot;' />
          <member value='&quot;Republic of the Congo&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Russian Federation&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Barthelemy&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Martin&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Martin&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taipei and environs&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;US&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vatican City&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column alias='New Recovered' caption='Measure_p' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <aliases>
          <alias key='1' value='New Confirmed' />
          <alias key='2' value='New Deaths' />
          <alias key='3' value='New Recovered' />
        </aliases>
        <members>
          <member alias='New Confirmed' value='1' />
          <member alias='New Deaths' value='2' />
          <member alias='New Recovered' value='3' />
        </members>
      </column>
    </datasource>
    <datasource caption='transformed' inline='true' name='federated.1kw0gnm01tk73c1dehm1o198r908' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='transformed' name='textscan.1gmz1gr1lfbo8t1cph2jr1mqz8ra'>
            <connection class='textscan' directory='/Users/hisanshafaque/Dropbox/20-03-20 Covid-19' filename='transformed.csv' password='' port='0' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[transformed.csv].[Country/Region]' />
                <expression op='[events.csv].[Country]' />
              </expression>
              <expression op='='>
                <expression op='[transformed.csv].[date]' />
                <expression op='[events.csv].[Date]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1gmz1gr1lfbo8t1cph2jr1mqz8ra' name='transformed.csv' table='[transformed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='integer' name='Days' ordinal='1' />
              <column datatype='string' name='Country/Region' ordinal='2' />
              <column datatype='real' name='Confirmed' ordinal='3' />
              <column datatype='real' name='New_Confirmed' ordinal='4' />
              <column datatype='real' name='Deaths' ordinal='5' />
              <column datatype='real' name='New_Deaths' ordinal='6' />
              <column datatype='real' name='Recovered' ordinal='7' />
              <column datatype='real' name='New_Recovered' ordinal='8' />
              <column datatype='real' name='Latitude' ordinal='9' />
              <column datatype='real' name='Longitude' ordinal='10' />
              <column datatype='real' name='Active_Cases' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1gmz1gr1lfbo8t1cph2jr1mqz8ra' name='events.csv' table='[events#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Event' ordinal='1' />
              <column datatype='date' name='Date' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_Confirmed]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>New_Confirmed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_Recovered]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>New_Recovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active_Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active_Cases]</local-name>
            <parent-name>[transformed.csv]</parent-name>
            <remote-alias>Active_Cases</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[events.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[events.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[events.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[events.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='real' name='[Active_Cases]' role='measure' type='quantitative' />
      <column caption='Country1_Selector' datatype='integer' name='[Calculation_577868159571632130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
      </column>
      <column caption='Measure_s' datatype='real' name='[Calculation_683139801237467137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then [New_Confirmed]&#13;&#10;elseif [Parameters].[Parameter 2] = 2 then [New_Deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = 3 then [New_Recovered]&#13;&#10;end' />
      </column>
      <column caption='Country Selector' datatype='integer' name='[Calculation_772085893348143106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] = [Country/Region] then 1&#13;&#10;ELSEIF [Parameters].[Country1 (copy)_772085893327544320] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
      </column>
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country2_Selector' datatype='integer' name='[Country1_Selector (copy)_577868159571730435]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Country1 (copy)_772085893327544320] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Days]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Major Events, Reactions and Measures Taken' datatype='string' name='[Event]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Confirmed' datatype='real' default-format='n#,##0;-#,##0' name='[New_Confirmed]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' default-format='n#,##0;-#,##0' name='[New_Deaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='real' default-format='n#,##0;-#,##0' name='[New_Recovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,MDY(Date),Major Events, Reactions and Measures Taken)' hidden='true' name='[Action (Country,MDY(Date),Major Events, Reactions and Measures Taken)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
          <groupfilter function='level-members' level='[Event]' />
        </groupfilter>
      </group>
      <group caption='Action (Country/Region,Country,MDY(Date),Major Events, Reactions and Measures Taken)' hidden='true' name='[Action (Country/Region,Country,MDY(Date),Major Events, Reactions and Measures Taken)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
          <groupfilter function='level-members' level='[Event]' />
        </groupfilter>
      </group>
      <group caption='Action (Country/Region,MDY(Date))' hidden='true' name='[Action (Country/Region,MDY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
          <groupfilter function='level-members' level='[md:date:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/hisanshafaque/Dropbox/20-03-20 Covid-19/covid-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/24/2020 01:51:42 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Active_Cases]' value='[Extract].[Active_Cases]' />
            <map key='[Confirmed]' value='[Extract].[Confirmed]' />
            <map key='[Country/Region]' value='[Extract].[Country/Region]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Date]' value='[Extract].[Date]' />
            <map key='[Days]' value='[Extract].[Days]' />
            <map key='[Deaths]' value='[Extract].[Deaths]' />
            <map key='[Event]' value='[Extract].[Event]' />
            <map key='[Latitude]' value='[Extract].[Latitude]' />
            <map key='[Longitude]' value='[Extract].[Longitude]' />
            <map key='[New_Confirmed]' value='[Extract].[New_Confirmed]' />
            <map key='[New_Deaths]' value='[Extract].[New_Deaths]' />
            <map key='[New_Recovered]' value='[Extract].[New_Recovered]' />
            <map key='[Recovered]' value='[Extract].[Recovered]' />
            <map key='[date]' value='[Extract].[date1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='transformed' increment-value='%null%' refresh-type='create' rows-inserted='3908' timestamp-start='2020-03-24 13:51:42.514' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date1</remote-alias>
              <ordinal>0</ordinal>
              <family>transformed.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Days</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Days]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Days</remote-alias>
              <ordinal>1</ordinal>
              <family>transformed.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>2</ordinal>
              <family>transformed.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>209</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>3</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>473</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_Confirmed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[New_Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_Confirmed</remote-alias>
              <ordinal>4</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_Deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[New_Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_Deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>7</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>148</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_Recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[New_Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_Recovered</remote-alias>
              <ordinal>8</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>9</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>287</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>10</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>292</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active_Cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Active_Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active_Cases</remote-alias>
              <ordinal>11</ordinal>
              <family>transformed.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>459</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>12</ordinal>
              <family>events.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Event</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Event]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Event</remote-alias>
              <ordinal>13</ordinal>
              <family>events.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>14</ordinal>
              <family>events.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.314865' measure-ordering='alphabetic' measure-percentage='0.541892' parameter-percentage='0.143243' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
          <calculation class='tableau' formula='&quot;US&quot;' />
        </column>
        <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
          <calculation class='tableau' formula='&quot;Italy&quot;' />
        </column>
        <column alias='New Recovered' caption='Measure_p' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <aliases>
            <alias key='1' value='New Confirmed' />
            <alias key='2' value='New Deaths' />
            <alias key='3' value='New Recovered' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight_Date' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid' type='sheet' worksheet='Events' />
      <command command='tsc:brush'>
        <param name='exclude' value='Days1,Days2,Events' />
        <param name='field-captions' value='MDY(Date)' />
        <param name='target' value='Covid' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country Graph'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
              <calculation class='tableau' formula='&quot;US&quot;' />
            </column>
            <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
              <calculation class='tableau' formula='&quot;Italy&quot;' />
            </column>
            <column alias='New Recovered' caption='Measure_p' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <aliases>
                <alias key='1' value='New Confirmed' />
                <alias key='2' value='New Deaths' />
                <alias key='3' value='New Recovered' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
            <column caption='Measure_s' datatype='real' name='[Calculation_683139801237467137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 2] = 1 then [New_Confirmed]&#13;&#10;elseif [Parameters].[Parameter 2] = 2 then [New_Deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = 3 then [New_Recovered]&#13;&#10;end' />
            </column>
            <column caption='Country Selector' datatype='integer' name='[Calculation_772085893348143106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] = [Country/Region] then 1&#13;&#10;ELSEIF [Parameters].[Country1 (copy)_772085893327544320] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
            </column>
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='New Confirmed' datatype='real' default-format='n#,##0;-#,##0' name='[New_Confirmed]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' default-format='n#,##0;-#,##0' name='[New_Deaths]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='real' default-format='n#,##0;-#,##0' name='[New_Recovered]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Attribute' name='[attr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Avg' name='[avg:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Avg' name='[avg:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_772085893348143106]' derivation='None' name='[none:Calculation_772085893348143106:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_683139801237467137]' derivation='Sum' name='[sum:Calculation_683139801237467137:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Calculation_683139801237467137:qk]' scope='rows' value='Measure' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' value='Select a country to highlight it&apos;s numbers'>
              <formatted-text>
                <run>Select a country to highlight it&apos;s numbers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' />
              <lod column='[federated.1kw0gnm01tk73c1dehm1o198r908].[attr:date:ok]' />
              <lod column='[federated.1kw0gnm01tk73c1dehm1o198r908].[avg:Confirmed:qk]' />
              <lod column='[federated.1kw0gnm01tk73c1dehm1o198r908].[avg:Deaths:qk]' />
              <lod column='[federated.1kw0gnm01tk73c1dehm1o198r908].[avg:Recovered:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run>Country/Region:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run>Date:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[attr:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Confirmed:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Deaths:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Recovered:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Recovered:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Calculation_683139801237467137:qk]</rows>
        <cols>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]</cols>
      </table>
      <simple-id uuid='{D42EB6D7-EA60-45A4-8199-07D75C44D8FB}' />
    </worksheet>
    <worksheet name='Days1'>
      <table>
        <view>
          <datasources>
            <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
              <calculation class='tableau' formula='&quot;Italy&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
            <column caption='Active Cases' datatype='real' name='[Active_Cases]' role='measure' type='quantitative' />
            <column caption='Country1_Selector' datatype='integer' name='[Calculation_577868159571632130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
            </column>
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Days]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Recovered]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_577868159571632130]' derivation='None' name='[none:Calculation_577868159571632130:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='None' name='[none:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Days]' derivation='None' name='[none:Days:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='None' name='[none:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='None' name='[none:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active_Cases]' derivation='Sum' name='[sum:Active_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' filter-group='3'>
            <groupfilter function='member' level='[md:date:ok]' member='20200323' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_577868159571632130:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_577868159571632130:qk]</column>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' value='86' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Confirmed:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Deaths:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Recovered:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Active_Cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Days Since First Case: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]</run>
                <run>&gt;&#10;Total Confirmed Cases: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Confirmed:qk]</run>
                <run>&gt;&#10;Total Deaths: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Deaths:qk]</run>
                <run>&gt;&#10;Total Recovered: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Recovered:qk]</run>
                <run>&gt;&#10;Active Cases: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Active_Cases:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A25C2D29-BE52-4BDA-8265-2DFC534245E9}' />
    </worksheet>
    <worksheet name='Days2'>
      <table>
        <view>
          <datasources>
            <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
              <calculation class='tableau' formula='&quot;US&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
            <column caption='Active Cases' datatype='real' name='[Active_Cases]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country2_Selector' datatype='integer' name='[Country1_Selector (copy)_577868159571730435]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Country1 (copy)_772085893327544320] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Days]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Recovered]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='None' name='[none:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country1_Selector (copy)_577868159571730435]' derivation='None' name='[none:Country1_Selector (copy)_577868159571730435:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Days]' derivation='None' name='[none:Days:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='None' name='[none:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='None' name='[none:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Active_Cases]' derivation='Sum' name='[sum:Active_Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' filter-group='3'>
            <groupfilter function='member' level='[md:date:ok]' member='20200323' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country1_Selector (copy)_577868159571730435:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country1_Selector (copy)_577868159571730435:qk]</column>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' value='87' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' value='Select a date to see the totals as of date' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Confirmed:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Deaths:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Recovered:qk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Active_Cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Days Since First Case: </run>
                <run>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]&gt;</run>
                <run>&#10;Total Confirmed Cases: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Confirmed:qk]</run>
                <run>&gt;&#10;Total Deaths: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Deaths:qk]</run>
                <run>&gt;&#10;Total Recovered: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Recovered:qk]</run>
                <run>&gt;&#10;Active Cases: &lt;</run>
                <run>[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:Active_Cases:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5A655448-2339-4EA8-A22D-BA5675DA35AC}' />
    </worksheet>
    <worksheet name='Events'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
              <calculation class='tableau' formula='&quot;US&quot;' />
            </column>
            <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
              <calculation class='tableau' formula='&quot;Italy&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
            <column caption='Country Selector' datatype='integer' name='[Calculation_772085893348143106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] = [Country/Region] then 1&#13;&#10;ELSEIF [Parameters].[Country1 (copy)_772085893327544320] = [Country/Region] then 1&#13;&#10;else 0&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Major Events, Reactions and Measures Taken' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Attribute' name='[attr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_772085893348143106]' derivation='None' name='[none:Calculation_772085893348143106:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Event]' derivation='None' name='[none:Event:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='categorical' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Event:nk]' />
              <groupfilter function='member' level='[none:Event:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' direction='ASC' measure-to-sort-by='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]</column>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]' value='58' />
            <format attr='wrap' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' value='on' />
            <format attr='text-align' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' value='right' />
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]' value='112' />
            <format attr='width' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' value='756' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' value='on' />
            <format attr='wrap' value='on' />
            <format attr='vertical-align' scope='rows' value='auto' />
            <format attr='text-align' scope='rows' value='auto' />
            <format attr='wrap' scope='rows' value='off' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' />
              <text column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country:nk]' />
              <lod column='[federated.1kw0gnm01tk73c1dehm1o198r908].[attr:date:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run>Country/Region:&#9;</run>
                <run>Æ&#10;</run>
                <run>Date:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[attr:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Confirmed:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Deaths:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run>New Recovered:&#9;</run>
                <run bold='true'>&lt;[federated.1kw0gnm01tk73c1dehm1o198r908].[sum:New_Recovered:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk] / [federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{0EF5F08C-B826-4F1E-B211-9E10884274A0}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
          </datasources>
          <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Major Events, Reactions and Measures Taken' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Event]' derivation='None' name='[none:Event:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]'>
            <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' direction='DESC' measure-to-sort-by='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]' value='396' />
            <format attr='width' field='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk] / [federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{65D37E43-4F6B-4248-9127-9FCC9ECA7B1D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e2e6f0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='font-weight' value='normal' />
          <format attr='text-align' value='center' />
          <format attr='vertical-align' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#faf4e7' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='transformed' name='federated.1kw0gnm01tk73c1dehm1o198r908' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country2' datatype='string' name='[Country1 (copy)_772085893327544320]' param-domain-type='list' role='measure' type='nominal' value='&quot;US&quot;'>
          <calculation class='tableau' formula='&quot;US&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas, The&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Cabo Verde&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Cayman Islands&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Channel Islands&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Congo (Brazzaville)&quot;' />
            <member value='&quot;Congo (Kinshasa)&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cruise Ship&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czech Republic&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;East Timor&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Faroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia, The&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Gibraltar&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guam&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guernsey&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Holy See&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Ivory Coast&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jersey&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Macao SAR&quot;' />
            <member value='&quot;Macau&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Monaco&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Ireland&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Others&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Republic of Ireland&quot;' />
            <member value='&quot;Republic of Korea&quot;' />
            <member value='&quot;Republic of Moldova&quot;' />
            <member value='&quot;Republic of the Congo&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Russian Federation&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Barthelemy&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Martin&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;San Marino&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St. Martin&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taipei and environs&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor-Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;US&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vatican City&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
        <column caption='Country1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Italy&quot;'>
          <calculation class='tableau' formula='&quot;Italy&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas, The&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Cabo Verde&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Cayman Islands&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Channel Islands&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Congo (Brazzaville)&quot;' />
            <member value='&quot;Congo (Kinshasa)&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cruise Ship&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czech Republic&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;East Timor&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Faroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia, The&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Gibraltar&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guam&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guernsey&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Holy See&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Ivory Coast&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jersey&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Macao SAR&quot;' />
            <member value='&quot;Macau&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Monaco&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Ireland&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Others&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Republic of Ireland&quot;' />
            <member value='&quot;Republic of Korea&quot;' />
            <member value='&quot;Republic of Moldova&quot;' />
            <member value='&quot;Republic of the Congo&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Russian Federation&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saint Barthelemy&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Martin&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;San Marino&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St. Martin&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taipei and environs&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor-Leste&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;US&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vatican City&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
        <column alias='New Recovered' caption='Measure_p' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <aliases>
            <alias key='1' value='New Confirmed' />
            <alias key='2' value='New Deaths' />
            <alias key='3' value='New Recovered' />
          </aliases>
          <members>
            <member alias='New Confirmed' value='1' />
            <member alias='New Deaths' value='2' />
            <member alias='New Recovered' value='3' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1kw0gnm01tk73c1dehm1o198r908'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='51875' id='9' param='horz' type='layout-flow' w='98400' x='800' y='24125'>
            <zone h='51875' id='7' param='horz' type='layout-flow' w='98400' x='800' y='24125'>
              <zone h='51875' id='5' type='layout-basic' w='98400' x='800' y='24125'>
                <zone h='51875' id='3' name='Country Graph' w='98400' x='800' y='24125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='5250' id='49' type='layout-basic' w='31300' x='38800' y='6875'>
            <zone h='5250' id='50' param='horz' type='layout-flow' w='31300' x='38800' y='6875'>
              <zone custom-title='true' h='5250' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='31300' x='38800' y='6875'>
                <formatted-text>
                  <run>Country 1</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone custom-title='true' h='5250' id='11' mode='compact' param='[Parameters].[Country1 (copy)_772085893327544320]' type='paramctrl' w='29100' x='70100' y='6875'>
            <formatted-text>
              <run>Country 2</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5875' id='34' type='layout-flow' w='39500' x='59700' y='1000'>
            <zone h='5875' id='33' name='Country Graph' pane-specification-id='4' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='color' w='39500' x='59700' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='12000' id='40' name='Days1' show-title='false' w='31300' x='38800' y='12125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='12000' id='41' name='Days2' show-title='false' w='29100' x='70100' y='12125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8000' id='46' mode='dropdown' name='Days2' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' show-all='false' type='filter' values='database' w='38000' x='800' y='12125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5875' id='12' param='horz' type='layout-flow' w='58900' x='800' y='1000'>
            <zone fixed-size='302' forceUpdate='true' h='4625' id='35' is-fixed='true' type='text' w='58900' x='800' y='1000'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Comparing &lt;</run>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>[Parameters].[Parameter 1]</run>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>&gt; and &lt;</run>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>[Parameters].[Country1 (copy)_772085893327544320]</run>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>&gt; Covid-19 Cases</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='5250' id='51' type='text' w='38000' x='800' y='6875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18875' id='72' name='Events' w='98400' x='800' y='80125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='4125' id='73' type='text' w='98400' x='800' y='76000'>
            <formatted-text>
              <run bold='true' fontname='Tableau Bold' fontsize='16'>Major Events, Reactions and Measures Taken in </run>
              <run bold='true' fontname='Tableau Bold' fontsize='15'>&lt;[Parameters].[Parameter 1]&gt; and &lt;[Parameters].[Country1 (copy)_772085893327544320]&gt; </run>
              <run bold='true' fontname='Tableau Bold' fontsize='10'>(Click to highlight on graph)</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone custom-title='true' h='4000' id='74' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='38000' x='800' y='20125'>
            <formatted-text>
              <run>Measure</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='71' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98770' id='70' param='vert' type='layout-flow' w='95734' x='2133' y='615'>
                <zone fixed-size='302' forceUpdate='true' h='5077' id='35' type='text' w='95734' x='2133' y='615'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Comparing &lt;</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>[Parameters].[Parameter 1]</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>&gt; and &lt;</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>[Parameters].[Country1 (copy)_772085893327544320]</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>&gt; Covid-19 Cases</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3846' id='46' mode='dropdown' name='Days2' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' show-all='false' type='filter' values='database' w='95734' x='2133' y='5692'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3692' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='95734' x='2133' y='9538'>
                  <formatted-text>
                    <run>Country 1</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='6846' id='40' is-fixed='true' name='Days1' show-title='false' w='95734' x='2133' y='13230'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3692' id='11' mode='compact' param='[Parameters].[Country1 (copy)_772085893327544320]' type='paramctrl' w='95734' x='2133' y='20076'>
                  <formatted-text>
                    <run>Country 2</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='6846' id='41' is-fixed='true' name='Days2' show-title='false' w='95734' x='2133' y='23768'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4769' id='33' name='Country Graph' pane-specification-id='4' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='color' w='95734' x='2133' y='30614'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='443' h='34692' id='3' is-fixed='true' name='Country Graph' w='95734' x='2133' y='35383'>
                  <layout-cache minheight='208' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29307' id='72' name='Events' w='95734' x='2133' y='70075'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5BC73BB8-7284-4693-A541-AC4F658B9BD2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5DEA142-6A00-4471-B0B5-34BB1C5C00D2}' />
    </window>
    <window class='worksheet' name='Events'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Country1 (copy)_772085893327544320]' type='parameter' />
            <card pane-specification-id='3' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[:Measure Names]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:Date:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893328953345:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Event:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[yr:Date:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5223599F-BD87-4E4D-981C-7F9FA6FAE252}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid'>
      <viewpoints>
        <viewpoint name='Country Graph'>
          <zoom type='entire-view' />
          <highlight field='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Days1' />
        <viewpoint name='Days2' />
        <viewpoint name='Events' />
      </viewpoints>
      <active id='74' />
      <simple-id uuid='{A6AB5F08-1586-4770-B8AB-46FA8FA8AF46}' />
    </window>
    <window class='worksheet' hidden='true' name='Country Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Country1 (copy)_772085893327544320]' type='parameter' />
            <card param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='highlighter' />
            <card pane-specification-id='4' param='[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[:Measure Names]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893328953345:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_772085893348143106:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE3EDCC3-1C81-47CC-B8CB-0D4D4D0E6440}' />
    </window>
    <window class='worksheet' hidden='true' name='Days1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_577868159571632130:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9402F2FC-4C32-4E61-9F2E-DFBC39944046}' />
    </window>
    <window class='worksheet' hidden='true' name='Days2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[md:date:ok]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Calculation_577868159571632130:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country/Region:nk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Country1_Selector (copy)_577868159571730435:qk]</field>
            <field>[federated.1kw0gnm01tk73c1dehm1o198r908].[none:Days:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC83FAA4-3DAB-4AA5-A170-E359A261C57A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Events' width='192'>
      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
      4LBSWpKDwWAkJy8XR94kFk22UN9wmjkLl3DN1AxaTvVRNnU6M2or6DnfjOKcw8fuXo48UMcg
      OcydO4ui4jwqq8qYlKlj58FmZiy9m/wsgaaT7Sy751YqC7IBAXtmNlOnz2RGWTbVM2eTaTNT
      WFqMVaclNyePoprplJmj7Dh8juW3301OhoOSskIsBiu5WTZkKcqulS8zENdy56MPU5adSVnt
      XMb7OsksraKs+hpm5YfY29jGTcvuYl6Bnt31Lcy97R6Ks60YrFaC/kHGk0ZmTS+nsrqckvIS
      CosKcGbYsGfmkZFp5Prl13Pm4G68mhzuu+sWhtqbcYk1fOLOJSTdFzHllZBhs5BlEdi4fjNz
      brqfO2+9htNHDxJzzOaOxSU8t3Idj378E3Tt30kss4b771+GzTfI3hYvn/ncfUytdLJ/737m
      3HY/U4uyAJmDu1bSNRZj3vKPcfO1cxlpPUpfPI+PPXgf4uARGrriPHjPzZw/UEfv6DDzbryT
      GTVFVM68htzECMfbx1i0fDlOqwFR1GB3ZFOan0NxaSFWg4G8bCcABr2JmddeB8pVkmX5nX9v
      C4x2Ks//9CeKNyFfYckPX9el3y77+e3f3zff29u/bPnL1/n2fFecLl+hzO/Z1jtlusr1vL+e
      5A8sy0e5UvlS8bCyY812JSm9Z72/Of8HlPG90z9y/z9gvo88Lr8xTUqlFI/Xf+Vl3/n90s9S
      Stm4Y5USjqfe/eyDlpViyubNaxR/6sPPgav1e70RpijKxEAWovrX1D+Vdw+X8HsPRPKX5r2n
      4pXHdVBQZEAU+H2rQH0lUpXW1Eu3Kq2pAVClNTUAqrSmBkCV1tQAqNKaGgBVWlMDoEpragBU
      aU0NgCqtqQFQpbXLXohxu91EIpE/R1lUqj+5ywJgMpnQaj/iRTGV6q+E+jCcKq2p9wCqtKYG
      QJXW1ACo0poaAFVaUwOgSmtqAFRpTQ2AKq2pAVClNTUAqrSmBkCV1q4YgLB7mMb6gxw8eJD6
      ww1cbD2PL/bhHYvLiRBDriAAkYCL/pHg+6b7xocZGQkQCn/ww3ZSMsLQkJ+JZzNkhrrOs3fv
      Hs529AISwUCY9z63ocgyoVCYj3qYwzXSgz+auvJMH0SRCQZC/FZPiygKI719hOIT24v6x2k6
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      vQCiV8Yvi/iDfsZ6FNsBfzTC4vw05WqL5YVZJjakkhleOlvizXfXmJoqEY6kKRUVOr0qYVlA
      ECVyxTn2qw2Wji9T3a9Qa20TiacopLOI7gSPpKKG4oQCR6ZU8XCAQDpDcUEjFYuQypXQOmWi
      iSAqEmefP0a/26PfB8tymJ05iWt0SYwdEj6XieEQDbnk51/GL1lUWgbpXI7RQQ+fahMwLHyB
      AM++NEu31WO/1kTyygRlL0ogysmlRQTAMG0CoSiupZHKFlEVBUGQKBRnWVo+zo1b2wgeL0FF
      JpfOkV+e5/DGBfyRIK7WpaXJROJxfKEQQa+DNjGYiF4kr4xfljis1ylNzzI/U8B2BF555SUq
      1RrHjx8nl84RkW3Ku7uIWMzNzmHpE2rVOo7tEopGsWyXqaksY8NCcodEUllEyc/8XJqVrSqx
      eA6/30etXsPj6IxtgUzEz8ZBA8dxicfTGJM+tvglCYZHZIM+tpzvdunjoxpeP9hM+udNqe+c
      5agm78H/P6ok8d7Pq/Uq2XT27uf6ZMjFS1d59sUX8cmex57jwePc2yT7aLMHxnnP9ezvVShO
      5RGE29fG3bbaDx/v9n71eoVEKnubbN/ZQ7jH0NcFx+D8+x9y+tyLR8vLe451p7n4p5WE8uA2
      D+x3b6Psu/rHY7Z76FifgKc5G/SpLYp/GvBFUed/ZZzh9FGPi5evcerc80QCDydLNZtVksns
      3b9dS6PaGpHLPJnJ6h0clvfJ5qaQPmkCci32qi2CPh+TwYDCVAF9PMIVBFrtEYXCHfLtsvLx
      JeRwmsXZ0t3d6wd7DF0PhVwWWbAoV3sUCikOtjeoDw2ePf1zB+bJaABeL81ml6n80fW1ymVa
      gwkLizNUaw3yuSz/GGxt7jI7N8WF8+8we/wM1YM9Tp0+Q6VSxtLG+IJBAtEUfvnhkOV4PMax
      LWrNNkHFQ6MzYGZmilq1QTziY2SJxMP3k9NOp0MsdpTmbOoTdg/KpJMJGu0esZD/dqNscETl
      iW1RfmWEsFGjSrvT4r/8339JvJCkWysfEc92FzkQ4Nh8ifd+9haBaJid2oQ/+b2vcnNzl531
      y+y3dHIhgYEBw94QXzBMqZSjP+xSLvf54z/8HbRBm7/4y+8yNz/Pxq11BpqD1W8h+iJY4x6F
      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
    </thumbnail>
  </thumbnails>
</workbook>
